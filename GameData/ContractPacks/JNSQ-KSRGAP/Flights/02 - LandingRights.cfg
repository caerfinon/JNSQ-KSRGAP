// -----------------------------------------------------------------
//	CONTRACT:  Landing Rights - Trans Kerbin Airlines - Trans Kerbin Airlines Inspections - Open bases
//	Author: Caerfinon 
//	Credits:
//	{
//		Original GAP: Author - inigma
//		Original Kerbin side GAP: Author - Keniamin 
//		expression requirements: from from "Field Research" - Author - nightingale
//	}
// -----------------------------------------------------------------
CONTRACT_TYPE
{
//CONTRACT DESCRIPTION
	sortKey = JKSRGAP02
	name = JKSRGAP02-LandingRights
	title = TKA Flight @/flightNumber - KSC to @JKSRGAP:siteFullName.ElementAt($jksrgapLandingRights)
	genericTitle = A flight to gain landing rights at a new airfield
	group = Trans Kerbin Airlines Inspections
	agent = Trans Kerbin Airlines

	description = Trans Kerbin Airlines wants to open routes to @JKSRGAP:siteFullName.ElementAt($jksrgapLandingRights) as soon as possible.&br;&br;Fly out @/numPassengers company executives to @JKSRGAP:siteName.ElementAt($jksrgapLandingRights) to negotiate, wait 30 seconds for the deal to be finalized, take off and return back to KSC.
	genericDescription = Fly company executives to a new airfields to negotiate landing rights for future commercial flights 
	synopsis = Fly company executives to a new airfields to negotiate landing rights for future commercial flights
	completedMessage = Flight Completed!&br;&br;Pretzels and Soda served: @/numSnacks&br;Air sickness bags used: @/numAirSickness&br;&br;You have now acquired Landing Rights&br;&br;Trans Kerbin Airlines thanks you for flying and reminds you the sky is no longer the limit.
	
//Contract Limits
	maxCompletions = 0
	maxSimultaneous = 1
	autoAccept = false
	declinable = true
	cancellable = true
	minExpiry = 0.0
	maxExpiry = 0.0
	deadline = 0

//Contract Reward Modifiers
	prestige = Trivial
	targetBody = Kerbin
	
//Contract Rewards
	rewardFunds = (10000 + @JKSRGAP:siteFltDistance.ElementAt($jksrgapLandingRights) + (200 * @/numPassengers )) * Random(1.0, 1.15)
	advanceFunds = (@/rewardFunds * 0.25 )
	rewardReputation = 1.0

//Contract Penalties
	failureFunds =  (@/rewardFunds * 1.15) * Random(1.0, 1.25)  
	failureReputation = 10 + ( @/numPassengers) 
	
// -----------------------------------------------------------------	
// REQUIREMENTS FOR CONTRACT TO APPEAR
// -----------------------------------------------------------------	
//

// Requires that Flight progress in persistent storage be a value between 0 and x (depending on mods installed) 
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		title =  KAA Certification Complete
		contractType = JKSRGAP01-LetsStartAnAirline
		minCount = 1
	}

    // Landing rights stops being available when all 15 airpports have been flown to successfully
	REQUIREMENT
	{
		name = Expression
		type = Expression
		title = Landing Rights Progress Has Not Finished
		expression = $jksrgapLandingRights <= 18
	}


// -----------------------------------------------------------------	
//DATA NODES TO PROCESS FOR CONTRACT USE
// -----------------------------------------------------------------

// flightNumber
	DATA
	{
		type = string
		flightNumber = @JKSRGAP:siteFlightNumBase.ElementAt($jksrgapLandingRights) + "0"
		hidden = true
	}



//Contract Specific VesselParameterGroup Definition Key (to prevent conflict with other active contracts)
	DATA
	{
		type = string
		craft = "JKSRGAPcraftLandingRights" + @/flightNumber 
		hidden = true
	}

//List of Possible ATC genders
	DATA
	{
		type = List<string>
		ATCGender = ["M" ,"F"]
		hidden = true
	}
	
// Merge random gender to Group siteATC type to select dialog image
	DATA
	{
		type = string
		site1ATCImage = "ATC_" + @/ATCGender.Random()
		hidden = true
		
	}
	
	DATA
	{
		type = string
		site2ATCImage = "ATC_" + @/ATCGender.Random()
		hidden = true
		
	}

//Passenger Data
	DATA
	{
		type = int
		numPassengers = Random(2, 4)
	
	}
	
//Snacks
	DATA
	{
		type = double
		
		numSnacks = Round(@numPassengers * 1.05)
		numAirSickness = Round(Random( 0 , @numPassengers / 6))
		
	}
	

// -----------------------------------------------------------------
//BEHAVIOURS TO DO WHEN CREATING CONTRACT
// -----------------------------------------------------------------
//

// Persistent Storage routines
	BEHAVIOUR
	{
		name = Expression
		type = Expression

		// On success set the progress counter
		CONTRACT_COMPLETED_SUCCESS
		{
			type = int
			jksrgapFlightProgress = $jksrgapFlightProgress + 1
			jksrgapLandingRights = $jksrgapLandingRights + 1
			
		}
	}
		
	BEHAVIOUR
	{
        name = SpawnPassengers
        type = SpawnPassengers
        count = @/numPassengers  
		kerbalType = Tourist
		removePassengers = true
	}

// Eliminate craft on contract failure to prevent tourist spam in Astronaut Complex.	
	
	BEHAVIOUR
	{
		name = DestroyVessel
		type = DestroyVessel
		onState = CONTRACT_FAILED
		vessel = @/craft
	}

	BEHAVIOUR
	{
		name = WaypointGenerator
		type = WaypointGenerator
		
		WAYPOINT
		{
			name = KSC Runway
			icon = ContractPacks/JNSQ-KSRGAP/Assets/Icons/Airport
			latitude = @JKSRGAP:siteLAT.ElementAt(0)
			longitude = @JKSRGAP:siteLON.ElementAt(0)
			altitude = 0
		}
		
		WAYPOINT
		{
			name = the Air Terminal
			icon = ContractPacks/JNSQ-KSRGAP/Assets/Icons/terminal
			altitude = 0
			latitude = @JKSRGAP:terminalLAT.ElementAt(0)
			longitude = @JKSRGAP:terminalLON.ElementAt(0)
			parameter = RequestLandingLaunch
			
		}

		WAYPOINT
		{
			name = @JKSRGAP:siteName.ElementAt($jksrgapLandingRights)
			icon = ContractPacks/JNSQ-KSRGAP/Assets/Icons/Airport
			altitude = 0 
			latitude = @JKSRGAP:siteLAT.ElementAt($jksrgapLandingRights)
			longitude = @JKSRGAP:siteLON.ElementAt($jksrgapLandingRights)
			
		}
		
		WAYPOINT
		{
			name = the Air Terminal
			icon = ContractPacks/JNSQ-KSRGAP/Assets/Icons/terminal
			altitude = 0 
			latitude = @JKSRGAP:terminalLAT.ElementAt($jksrgapLandingRights)
			longitude = @JKSRGAP:terminalLON.ElementAt($jksrgapLandingRights)
			parameter = RequestLandingSite2
			
		}
	}

// Mission Dialog boxes
	BEHAVIOUR
	{
		name = DialogBox
		type = DialogBox

		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = RequestTakeoffLaunch
			position = CENTER
			
			TEXT
			{
				text = Trans Flight, you are cleared for depature and immediate take off. Fly safe.
				fontSize = 20
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/JNSQ-KSRGAP/Assets/Characters/@/site1ATCImage
				characterName = KSC Air Traffic Control
			}
			
		}
		
		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = RequestLandingSite2
			
			position = CENTER
			
			TEXT
			{
				text = Trans Flight, we have you on approach. You are cleared for landing. On touchdown proceed to the indicated airport terminal. Directions have been transmited to you.
				fontSize = 20
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/JNSQ-KSRGAP/Assets/Characters/@/site2ATCImage
				characterName = Local Air Traffic Control
			}
			
		}
		
		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = RequestTakeoffSite2
			
			position = CENTER
			
			TEXT
			{
				text = Trans Flight, you are cleared for departure. Please proceed to the runway for immediate takeoff  
				fontSize = 20
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/JNSQ-KSRGAP/Assets/Characters/@/site2ATCImage
				characterName = Local Air Traffic Control
			}
			
		}
		
		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = RequestLandingLaunch
			
			position = CENTER
			
			TEXT
			{
				text = Trans Flight, we have you on approach. You are cleared for landing. On touchdown proceed to the indicated airport terminal. Directions have been transmited to you. Welcome back. 
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/JNSQ-KSRGAP/Assets/Characters/@/site1ATCImage
				characterName = KSC Air Traffic Control
			}
			
		}
		
// failed misssion dialog
		DIALOG_BOX
		{
			condition = CONTRACT_FAILED
			position = CENTER
			title = <b>Sometimes Things Go Wrong</b>
			titleColor = #B00B1E
			
			TEXT
			{
				text = Trans Flight, Are you there? please respond. Trans Flight, we've lost you on radar, do you copy? Are you declaring an emergency?.... and you were doing so well.
				fontSize = 20
				textColor = #B00B1E
			}
			
			IMAGE
			{
				url = ContractPacks/JNSQ-KSRGAP/Assets/Characters/@/site1ATCImage
				characterName = KSC Air Traffic Control
			}
		}
	}


// -----------------------------------------------------------------
//PARAMETERS FOR CONTRACT COMPLETION
// -----------------------------------------------------------------
//
//Craft definition
	PARAMETER
	{
		name = Initialization
		type = VesselParameterGroup
		title = Your aircraft must meet all requirements
		define = @/craft
		completeInSequence = true
		dissassociateVesselsOnContractFailure = false 

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = have a certified pilot
			trait = Pilot
			minCrew = 1
			disableOnStateChange = false
			hideChildren = true
		}
		
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			title = have wings
			category = Aero
			disableOnStateChange = false
			hideChildren = true
		}
		
		PARAMETER
		{
			name = HasCrewCapacity
			type = HasCrewCapacity
			title = have seating for passengers and crew
			minCapacity = @/numPassengers + 1
			disableOnStateChange = false
		}
		
		//Passenger Manifest - Load Passengers
		PARAMETER
		{
			name = HasPassengers
			type = HasPassengers
			title = load all @/numPassengers passengers
			count = @/numPassengers				
			hideChildren = true
		}
	}
	
//Launch Site
	PARAMETER
	{
		name = LaunchSite
		type = VesselParameterGroup
		title = begin at the KSC Runway
		vessel = @/craft
		completeInSequence = true
		disableOnStateChange = true
		hideVesselName = true
		
		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			index = 0
			distance = 1600
			hideOnCompletion = false
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
		}
		
	}

	PARAMETER
	{
		name = RequestTakeoffLaunch
		type = Duration
		duration = 5s
		preWaitText = request clearance for takeoff:
		waitingText = requesting clearance for takeoff: 
		completionText = be cleared for takeoff
		completeInSequence = true
		disableOnStateChange = true
	}

// -----------------------------------------------------------------	
// Trip to Site2
// -----------------------------------------------------------------

	PARAMETER
	{
		name = RequestLandingSite2
		type = VesselParameterGroup
		vessel = @/craft
		completeInSequence = true
		disableOnStateChange = true
		hideChildren = true
		hidden = true
		
		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			index = 2
			distance = 19000
			hideOnCompletion = true
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
			hidden = true
		}
	}

	PARAMETER
	{
		name = LandingSite2
		type = VesselParameterGroup
		title = complete flight to the @JKSRGAP:siteFullName.ElementAt($jksrgapLandingRights) runway
		notes = land and move to within 50 meters of the terminal
		vessel = @/craft
		disableOnStateChange = true
		hideVesselName = true
		completeInSequence = true

		PARAMETER
		{
			name = Site2Terminal
			type = VisitWaypoint
			title = then taxi to the terminal
			index = 3
			distance = 50
			horizontalDistance = 50
			showMessages =  true
			disableOnStateChange = false
		}
		
		PARAMETER
		{
			name = ReachState
			type = ReachState
			title = and stop your aricraft
			targetBody = Kerbin
			situation = LANDED
			maxSpeed = 0.0
			disableOnStateChange = false
			hideChildren = true
		}	
		
		PARAMETER
		{
			name = TerminalrampSite2
			type = Duration
			
			duration = 10s
			preWaitText = wait for terminal ramp:
			waitingText = ramp being positioned: 
			completionText = ramp is in place begin deplaning  

			completeInSequence = true
			disableOnStateChange = false
		}
	}
		
	PARAMETER
	{
		name = All
		type = All
		title = complete landing rights negotiations
		disableOnStateChange = true
		completeInSequence = true
			
		PARAMETER
		{
			name = ReachState
			type = ReachState
			situation = LANDED
			maxSpeed = 0.0
			disableOnStateChange = false
			hideChildren = true
			hidden = true
			completeInSequence = true
		}		
	
		PARAMETER
		{
			name = Duration
			type = Duration		
			duration = 30s
			preWaitText = wait for negotiations to complete for:
			waitingText = negotiations underway now:
			completionText = negotiations completed!
			startCriteria = PARAMETER_COMPLETION
			parameter = LandingSite2
		}		
	}
	
	PARAMETER
	{
		name = RequestTakeoffSite2
		type = Duration		
		duration = 5s
		preWaitText = request clearance for takeoff:
		waitingText = requesting clearance for takeoff: 
		completionText = be cleared for takeoff
		completeInSequence = true
		disableOnStateChange = true
	}
	
// -----------------------------------------------------------------	
// Retun Trip to KSC
// -----------------------------------------------------------------

	PARAMETER
	{
		name = RequestLandingLaunch
		type = VesselParameterGroup
		vessel = @/craft
		completeInSequence = true
		disableOnStateChange = true
		hideChildren = true
		hidden = true
		
		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			index = 0
			distance = 19000
			hideOnCompletion = true
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
			hidden = true
		}
	}

	PARAMETER
	{
		name = LandingSite
		type = VesselParameterGroup
		title = complete flight to the KSC runway
		notes = land and move to within 50 meters of the terminal
		vessel = @/craft
		disableOnStateChange = true
		completeInSequence = true
		hideVesselName = true
			
		PARAMETER
		{
			name = KSCTerminal
			type = VisitWaypoint
			title = then taxi to the terminal
			index = 1
			distance = 50
			horizontalDistance = 50
			showMessages =  true
			disableOnStateChange = false
		}
			
		PARAMETER
		{
			name = ReachState
			type = ReachState
			title = and stop your aircraft
			targetBody = Kerbin
			situation = LANDED
			maxSpeed = 0.0
			disableOnStateChange = false
			hideChildren = true
		}			
			
		PARAMETER
		{
			name = TerminalrampKSC
			type = Duration
			
			duration = 10s
			preWaitText = wait for terminal ramp:
			waitingText = ramp being positioned: 
			completionText = ramp is in place begin deplaning  

			completeInSequence = true
			disableOnStateChange = false
		}
	}

	PARAMETER
	{
		name = All
		type = All
		title = safely
		completeInSequence = true
		disableOnStateChange = true
		
		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your aircraft
			vessel = @/craft
		}
		
		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = or killing anyone
			vessel = @/craft
		}
	}
	
//Recovery Parameter - Recover Kerbals
	PARAMETER
	{
        name = RecoverKerbal
        type = RecoverKerbal
		title = and recover all @/numPassengers passengers
        completeInSequence = true
		hideChildren = true
    }

// -----------------------------------------------------------------
// END OF CONTRACT
// -----------------------------------------------------------------
}



	



	